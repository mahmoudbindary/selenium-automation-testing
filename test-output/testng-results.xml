<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-01-29T23:45:09 EET" name="Default suite" finished-at="2021-01-29T23:46:09 EET" duration-ms="60105">
    <groups>
    </groups>
    <test started-at="2021-01-29T23:45:09 EET" name="Default test" finished-at="2021-01-29T23:46:09 EET" duration-ms="60105">
      <class name="airbnb_test.TestClass">
        <test-method is-config="true" signature="setUp()[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:09 EET" name="setUp" finished-at="2021-01-29T23:45:11 EET" duration-ms="2303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="beforeEachTest(java.lang.reflect.Method)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:11 EET" name="beforeEachTest" finished-at="2021-01-29T23:45:20 EET" duration-ms="8916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void airbnb_test.TestClass.verifyAppliedFilters()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="verifyAppliedFilters()[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:20 EET" name="verifyAppliedFilters" finished-at="2021-01-29T23:45:21 EET" duration-ms="1496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAppliedFilters -->
        <test-method is-config="true" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:21 EET" name="afterEachTest" finished-at="2021-01-29T23:45:21 EET" duration-ms="13" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAppliedFilters status=SUCCESS method=TestClass.verifyAppliedFilters()[pri:0, instance:airbnb_test.TestClass@20d28811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method is-config="true" signature="beforeEachTest(java.lang.reflect.Method)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:21 EET" name="beforeEachTest" finished-at="2021-01-29T23:45:28 EET" duration-ms="6145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void airbnb_test.TestClass.verifyResultsMatchExtraFilters() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="verifyResultsMatchExtraFilters()[pri:1, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:28 EET" name="verifyResultsMatchExtraFilters" finished-at="2021-01-29T23:45:43 EET" duration-ms="15321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyResultsMatchExtraFilters -->
        <test-method is-config="true" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:43 EET" name="afterEachTest" finished-at="2021-01-29T23:45:43 EET" duration-ms="95" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyResultsMatchExtraFilters status=SUCCESS method=TestClass.verifyResultsMatchExtraFilters()[pri:1, instance:airbnb_test.TestClass@20d28811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method is-config="true" signature="beforeEachTest(java.lang.reflect.Method)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:43 EET" name="beforeEachTest" finished-at="2021-01-29T23:45:48 EET" duration-ms="4973" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void airbnb_test.TestClass.verifyPropertyDisplayedOnMap()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="verifyPropertyDisplayedOnMap()[pri:2, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:48 EET" name="verifyPropertyDisplayedOnMap" finished-at="2021-01-29T23:45:52 EET" duration-ms="3665" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPropertyDisplayedOnMap -->
        <test-method is-config="true" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:52 EET" name="afterEachTest" finished-at="2021-01-29T23:45:52 EET" duration-ms="9" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPropertyDisplayedOnMap status=SUCCESS method=TestClass.verifyPropertyDisplayedOnMap()[pri:2, instance:airbnb_test.TestClass@20d28811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method is-config="true" signature="beforeEachTest(java.lang.reflect.Method)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:52 EET" name="beforeEachTest" finished-at="2021-01-29T23:45:56 EET" duration-ms="4712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void airbnb_test.TestClass.verifyPropertyWithLowestPrice()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEachTest -->
        <test-method signature="verifyPropertyWithLowestPrice()[pri:3, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:45:56 EET" name="verifyPropertyWithLowestPrice" finished-at="2021-01-29T23:46:07 EET" duration-ms="10789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPropertyWithLowestPrice -->
        <test-method is-config="true" signature="afterEachTest(org.testng.ITestResult)[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:46:07 EET" name="afterEachTest" finished-at="2021-01-29T23:46:07 EET" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyPropertyWithLowestPrice status=SUCCESS method=TestClass.verifyPropertyWithLowestPrice()[pri:3, instance:airbnb_test.TestClass@20d28811] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:airbnb_test.TestClass@20d28811]" started-at="2021-01-29T23:46:07 EET" name="tearDown" finished-at="2021-01-29T23:46:09 EET" duration-ms="1540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- airbnb_test.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
